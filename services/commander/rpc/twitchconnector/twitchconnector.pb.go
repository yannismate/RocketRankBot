// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.1
// source: rpc/twitchconnector/twitchconnector.proto

package twitchconnector

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JoinChannelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TwitchLogin string `protobuf:"bytes,1,opt,name=twitchLogin,proto3" json:"twitchLogin,omitempty"`
}

func (x *JoinChannelReq) Reset() {
	*x = JoinChannelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_twitchconnector_twitchconnector_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinChannelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinChannelReq) ProtoMessage() {}

func (x *JoinChannelReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_twitchconnector_twitchconnector_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinChannelReq.ProtoReflect.Descriptor instead.
func (*JoinChannelReq) Descriptor() ([]byte, []int) {
	return file_rpc_twitchconnector_twitchconnector_proto_rawDescGZIP(), []int{0}
}

func (x *JoinChannelReq) GetTwitchLogin() string {
	if x != nil {
		return x.TwitchLogin
	}
	return ""
}

type JoinChannelRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JoinChannelRes) Reset() {
	*x = JoinChannelRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_twitchconnector_twitchconnector_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinChannelRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinChannelRes) ProtoMessage() {}

func (x *JoinChannelRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_twitchconnector_twitchconnector_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinChannelRes.ProtoReflect.Descriptor instead.
func (*JoinChannelRes) Descriptor() ([]byte, []int) {
	return file_rpc_twitchconnector_twitchconnector_proto_rawDescGZIP(), []int{1}
}

type LeaveChannelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TwitchLogin string `protobuf:"bytes,1,opt,name=twitchLogin,proto3" json:"twitchLogin,omitempty"`
}

func (x *LeaveChannelReq) Reset() {
	*x = LeaveChannelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_twitchconnector_twitchconnector_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveChannelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveChannelReq) ProtoMessage() {}

func (x *LeaveChannelReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_twitchconnector_twitchconnector_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveChannelReq.ProtoReflect.Descriptor instead.
func (*LeaveChannelReq) Descriptor() ([]byte, []int) {
	return file_rpc_twitchconnector_twitchconnector_proto_rawDescGZIP(), []int{2}
}

func (x *LeaveChannelReq) GetTwitchLogin() string {
	if x != nil {
		return x.TwitchLogin
	}
	return ""
}

type LeaveChannelRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LeaveChannelRes) Reset() {
	*x = LeaveChannelRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_twitchconnector_twitchconnector_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveChannelRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveChannelRes) ProtoMessage() {}

func (x *LeaveChannelRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_twitchconnector_twitchconnector_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveChannelRes.ProtoReflect.Descriptor instead.
func (*LeaveChannelRes) Descriptor() ([]byte, []int) {
	return file_rpc_twitchconnector_twitchconnector_proto_rawDescGZIP(), []int{3}
}

type SendMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TwitchLogin string `protobuf:"bytes,1,opt,name=twitchLogin,proto3" json:"twitchLogin,omitempty"`
	Message     string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendMessageReq) Reset() {
	*x = SendMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_twitchconnector_twitchconnector_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageReq) ProtoMessage() {}

func (x *SendMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_twitchconnector_twitchconnector_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageReq.ProtoReflect.Descriptor instead.
func (*SendMessageReq) Descriptor() ([]byte, []int) {
	return file_rpc_twitchconnector_twitchconnector_proto_rawDescGZIP(), []int{4}
}

func (x *SendMessageReq) GetTwitchLogin() string {
	if x != nil {
		return x.TwitchLogin
	}
	return ""
}

func (x *SendMessageReq) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SendMessageRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendMessageRes) Reset() {
	*x = SendMessageRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_twitchconnector_twitchconnector_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRes) ProtoMessage() {}

func (x *SendMessageRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_twitchconnector_twitchconnector_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRes.ProtoReflect.Descriptor instead.
func (*SendMessageRes) Descriptor() ([]byte, []int) {
	return file_rpc_twitchconnector_twitchconnector_proto_rawDescGZIP(), []int{5}
}

type SendResponseMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TwitchLogin        string `protobuf:"bytes,1,opt,name=twitchLogin,proto3" json:"twitchLogin,omitempty"`
	RespondToMessageID string `protobuf:"bytes,2,opt,name=respondToMessageID,proto3" json:"respondToMessageID,omitempty"`
	Message            string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendResponseMessageReq) Reset() {
	*x = SendResponseMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_twitchconnector_twitchconnector_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendResponseMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendResponseMessageReq) ProtoMessage() {}

func (x *SendResponseMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_twitchconnector_twitchconnector_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendResponseMessageReq.ProtoReflect.Descriptor instead.
func (*SendResponseMessageReq) Descriptor() ([]byte, []int) {
	return file_rpc_twitchconnector_twitchconnector_proto_rawDescGZIP(), []int{6}
}

func (x *SendResponseMessageReq) GetTwitchLogin() string {
	if x != nil {
		return x.TwitchLogin
	}
	return ""
}

func (x *SendResponseMessageReq) GetRespondToMessageID() string {
	if x != nil {
		return x.RespondToMessageID
	}
	return ""
}

func (x *SendResponseMessageReq) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SendResponseMessageRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendResponseMessageRes) Reset() {
	*x = SendResponseMessageRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_twitchconnector_twitchconnector_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendResponseMessageRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendResponseMessageRes) ProtoMessage() {}

func (x *SendResponseMessageRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_twitchconnector_twitchconnector_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendResponseMessageRes.ProtoReflect.Descriptor instead.
func (*SendResponseMessageRes) Descriptor() ([]byte, []int) {
	return file_rpc_twitchconnector_twitchconnector_proto_rawDescGZIP(), []int{7}
}

var File_rpc_twitchconnector_twitchconnector_proto protoreflect.FileDescriptor

var file_rpc_twitchconnector_twitchconnector_proto_rawDesc = []byte{
	0x0a, 0x29, 0x72, 0x70, 0x63, 0x2f, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x33, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x61, 0x6e, 0x6e, 0x69, 0x73, 0x6d, 0x61,
	0x74, 0x65, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x6b, 0x62, 0x6f, 0x74,
	0x2e, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x22, 0x32, 0x0a, 0x0e, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x22, 0x10, 0x0a, 0x0e, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x22, 0x33, 0x0a, 0x0f, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x11, 0x0a, 0x0f, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x22, 0x4c,
	0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0b, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x10, 0x0a, 0x0e,
	0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x22, 0x84,
	0x01, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64,
	0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x32,
	0x9c, 0x05, 0x0a, 0x0f, 0x54, 0x77, 0x69, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x99, 0x01, 0x0a, 0x0b, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x43, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x61, 0x6e, 0x6e, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x72, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x72, 0x61, 0x6e, 0x6b, 0x62, 0x6f, 0x74, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x43, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x61, 0x6e, 0x6e, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x65,
	0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x6b, 0x62, 0x6f, 0x74, 0x2e, 0x74,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4a,
	0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x9c, 0x01, 0x0a, 0x0c, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x12, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x61,
	0x6e, 0x6e, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x72,
	0x61, 0x6e, 0x6b, 0x62, 0x6f, 0x74, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x61, 0x6e, 0x6e, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x72,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x6b, 0x62, 0x6f, 0x74, 0x2e, 0x74, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x99,
	0x01, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x61, 0x6e, 0x6e,
	0x69, 0x73, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x72, 0x61, 0x6e,
	0x6b, 0x62, 0x6f, 0x74, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x43, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x61, 0x6e, 0x6e, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x72, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x72, 0x61, 0x6e, 0x6b, 0x62, 0x6f, 0x74, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0xb1, 0x01, 0x0a, 0x13, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x61, 0x6e, 0x6e, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x72, 0x61, 0x6e, 0x6b, 0x62, 0x6f, 0x74, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x61, 0x6e,
	0x6e, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x65, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x72, 0x61,
	0x6e, 0x6b, 0x62, 0x6f, 0x74, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x15,
	0x5a, 0x13, 0x72, 0x70, 0x63, 0x2f, 0x74, 0x77, 0x69, 0x74, 0x63, 0x68, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_twitchconnector_twitchconnector_proto_rawDescOnce sync.Once
	file_rpc_twitchconnector_twitchconnector_proto_rawDescData = file_rpc_twitchconnector_twitchconnector_proto_rawDesc
)

func file_rpc_twitchconnector_twitchconnector_proto_rawDescGZIP() []byte {
	file_rpc_twitchconnector_twitchconnector_proto_rawDescOnce.Do(func() {
		file_rpc_twitchconnector_twitchconnector_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_twitchconnector_twitchconnector_proto_rawDescData)
	})
	return file_rpc_twitchconnector_twitchconnector_proto_rawDescData
}

var file_rpc_twitchconnector_twitchconnector_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_rpc_twitchconnector_twitchconnector_proto_goTypes = []interface{}{
	(*JoinChannelReq)(nil),         // 0: github.com.yannismate.rocketrankbot.twitchconnector.JoinChannelReq
	(*JoinChannelRes)(nil),         // 1: github.com.yannismate.rocketrankbot.twitchconnector.JoinChannelRes
	(*LeaveChannelReq)(nil),        // 2: github.com.yannismate.rocketrankbot.twitchconnector.LeaveChannelReq
	(*LeaveChannelRes)(nil),        // 3: github.com.yannismate.rocketrankbot.twitchconnector.LeaveChannelRes
	(*SendMessageReq)(nil),         // 4: github.com.yannismate.rocketrankbot.twitchconnector.SendMessageReq
	(*SendMessageRes)(nil),         // 5: github.com.yannismate.rocketrankbot.twitchconnector.SendMessageRes
	(*SendResponseMessageReq)(nil), // 6: github.com.yannismate.rocketrankbot.twitchconnector.SendResponseMessageReq
	(*SendResponseMessageRes)(nil), // 7: github.com.yannismate.rocketrankbot.twitchconnector.SendResponseMessageRes
}
var file_rpc_twitchconnector_twitchconnector_proto_depIdxs = []int32{
	0, // 0: github.com.yannismate.rocketrankbot.twitchconnector.TwitchConnector.JoinChannel:input_type -> github.com.yannismate.rocketrankbot.twitchconnector.JoinChannelReq
	2, // 1: github.com.yannismate.rocketrankbot.twitchconnector.TwitchConnector.LeaveChannel:input_type -> github.com.yannismate.rocketrankbot.twitchconnector.LeaveChannelReq
	4, // 2: github.com.yannismate.rocketrankbot.twitchconnector.TwitchConnector.SendMessage:input_type -> github.com.yannismate.rocketrankbot.twitchconnector.SendMessageReq
	6, // 3: github.com.yannismate.rocketrankbot.twitchconnector.TwitchConnector.SendResponseMessage:input_type -> github.com.yannismate.rocketrankbot.twitchconnector.SendResponseMessageReq
	1, // 4: github.com.yannismate.rocketrankbot.twitchconnector.TwitchConnector.JoinChannel:output_type -> github.com.yannismate.rocketrankbot.twitchconnector.JoinChannelRes
	3, // 5: github.com.yannismate.rocketrankbot.twitchconnector.TwitchConnector.LeaveChannel:output_type -> github.com.yannismate.rocketrankbot.twitchconnector.LeaveChannelRes
	5, // 6: github.com.yannismate.rocketrankbot.twitchconnector.TwitchConnector.SendMessage:output_type -> github.com.yannismate.rocketrankbot.twitchconnector.SendMessageRes
	7, // 7: github.com.yannismate.rocketrankbot.twitchconnector.TwitchConnector.SendResponseMessage:output_type -> github.com.yannismate.rocketrankbot.twitchconnector.SendResponseMessageRes
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_rpc_twitchconnector_twitchconnector_proto_init() }
func file_rpc_twitchconnector_twitchconnector_proto_init() {
	if File_rpc_twitchconnector_twitchconnector_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_twitchconnector_twitchconnector_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinChannelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_twitchconnector_twitchconnector_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinChannelRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_twitchconnector_twitchconnector_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveChannelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_twitchconnector_twitchconnector_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveChannelRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_twitchconnector_twitchconnector_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_twitchconnector_twitchconnector_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_twitchconnector_twitchconnector_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendResponseMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_twitchconnector_twitchconnector_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendResponseMessageRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_twitchconnector_twitchconnector_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_twitchconnector_twitchconnector_proto_goTypes,
		DependencyIndexes: file_rpc_twitchconnector_twitchconnector_proto_depIdxs,
		MessageInfos:      file_rpc_twitchconnector_twitchconnector_proto_msgTypes,
	}.Build()
	File_rpc_twitchconnector_twitchconnector_proto = out.File
	file_rpc_twitchconnector_twitchconnector_proto_rawDesc = nil
	file_rpc_twitchconnector_twitchconnector_proto_goTypes = nil
	file_rpc_twitchconnector_twitchconnector_proto_depIdxs = nil
}
